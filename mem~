	.file	"memory.c"
	.text
	.p2align 4,,15
	.globl	generate_random_list
	.type	generate_random_list, @function
generate_random_list:
.LFB39:
	.cfi_startproc
	pushq	%r12
	.cfi_def_cfa_offset 16
	.cfi_offset 12, -16
	pushq	%rbp
	.cfi_def_cfa_offset 24
	.cfi_offset 6, -24
	movl	%edi, %ebp
	movslq	%edi, %rdi
	salq	$3, %rdi
	pushq	%rbx
	.cfi_def_cfa_offset 32
	.cfi_offset 3, -32
	call	malloc
	testl	%ebp, %ebp
	movq	%rax, %r12
	jle	.L5
	movq	%rax, %rbx
	leal	-1(%rbp), %eax
	leaq	8(%r12,%rax,8), %rbp
	.p2align 4,,10
	.p2align 3
.L4:
	call	rand
	movslq	%eax, %rdx
	movl	%eax, %ecx
	addq	$8, %rbx
	imulq	$-2139062143, %rdx, %rdx
	shrq	$32, %rdx
	addl	%eax, %edx
	sarl	$31, %eax
	sarl	$7, %edx
	subl	%eax, %edx
	movl	%edx, %esi
	sall	$8, %esi
	subl	%edx, %esi
	subl	%esi, %ecx
	movslq	%ecx, %rcx
	movq	%rcx, -8(%rbx)
	cmpq	%rbp, %rbx
	jne	.L4
.L5:
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%rbp
	.cfi_def_cfa_offset 16
	movq	%r12, %rax
	popq	%r12
	.cfi_def_cfa_offset 8
	ret
	.cfi_endproc
.LFE39:
	.size	generate_random_list, .-generate_random_list
	.section	.rodata.str1.8,"aMS",@progbits,1
	.align 8
.LC0:
	.string	"Required arguments: buffer_length(N). "
	.section	.rodata.str1.1,"aMS",@progbits,1
.LC1:
	.string	"Time: %d\n"
.LC2:
	.string	"WHAT ARE THE CHANCES?!"
.LC3:
	.string	"\n%d\n"
	.section	.text.startup,"ax",@progbits
	.p2align 4,,15
	.globl	main
	.type	main, @function
main:
.LFB40:
	.cfi_startproc
	pushq	%r15
	.cfi_def_cfa_offset 16
	.cfi_offset 15, -16
	pushq	%r14
	.cfi_def_cfa_offset 24
	.cfi_offset 14, -24
	pushq	%r13
	.cfi_def_cfa_offset 32
	.cfi_offset 13, -32
	pushq	%r12
	.cfi_def_cfa_offset 40
	.cfi_offset 12, -40
	pushq	%rbp
	.cfi_def_cfa_offset 48
	.cfi_offset 6, -48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	.cfi_offset 3, -56
	subq	$40, %rsp
	.cfi_def_cfa_offset 96
	cmpl	$2, %edi
	jne	.L15
	movq	8(%rsi), %rdi
	movl	$10, %edx
	xorl	%esi, %esi
	xorl	%ebp, %ebp
	xorl	%r12d, %r12d
	call	strtol
	movq	%rax, %rbx
	movl	%eax, %edi
	movl	%eax, %r13d
	call	srand
	movl	%ebx, %edi
	movl	$10000, %ebx
	call	generate_random_list
	movq	%rax, %r14
	.p2align 4,,10
	.p2align 3
.L12:
	call	rand
	cltd
	movq	%rsp, %rsi
	movl	$1, %edi
	idivl	%r13d
	movslq	%edx, %r15
	call	clock_gettime
	leaq	16(%rsp), %rsi
	movl	$1, %edi
	movq	(%r14,%r15,8), %r15
	call	clock_gettime
	movq	16(%rsp), %rcx
	subq	(%rsp), %rcx
	xorl	%eax, %eax
	movq	24(%rsp), %rdx
	subl	8(%rsp), %edx
	movl	$.LC1, %esi
	movl	$1, %edi
	addl	%r15d, %r12d
	imull	$1000000000, %ecx, %ecx
	addl	%ecx, %edx
	addl	%edx, %ebp
	call	__printf_chk
	subl	$1, %ebx
	jne	.L12
	testl	%r12d, %r12d
	je	.L16
.L13:
	movl	%ebp, %eax
	movl	$1759218605, %edx
	sarl	$31, %ebp
	imull	%edx
	movl	$.LC3, %esi
	movl	$1, %edi
	xorl	%eax, %eax
	sarl	$12, %edx
	subl	%ebp, %edx
	call	__printf_chk
	movq	%r14, %rdi
	call	free
	xorl	%eax, %eax
.L10:
	addq	$40, %rsp
	.cfi_remember_state
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%rbp
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	ret
.L16:
	.cfi_restore_state
	movl	$.LC2, %esi
	movl	$1, %edi
	xorl	%eax, %eax
	call	__printf_chk
	jmp	.L13
.L15:
	movl	$.LC0, %edi
	call	puts
	orl	$-1, %eax
	jmp	.L10
	.cfi_endproc
.LFE40:
	.size	main, .-main
	.ident	"GCC: (Ubuntu 4.8.4-2ubuntu1~14.04) 4.8.4"
	.section	.note.GNU-stack,"",@progbits
